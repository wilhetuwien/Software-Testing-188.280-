// Generated by Selenium IDE
package at.tuwien.swtesting;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.AfterAll;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.WebElement;

import org.openqa.selenium.support.ui.Select;

import at.tuwien.swtesting.pageobjects.BugListMassChangePage;
import at.tuwien.swtesting.pageobjects.BugListPage;
import at.tuwien.swtesting.pageobjects.CreateBugPage;
import at.tuwien.swtesting.pageobjects.HomePage;
import at.tuwien.swtesting.pageobjects.LoginPage;
import at.tuwien.swtesting.pageobjects.ProcessBugPage;
import at.tuwien.swtesting.pageobjects.SearchPage;
import at.tuwien.swtesting.pageobjects.ShowBugPage;
import io.github.bonigarcia.wdm.WebDriverManager;
import io.github.bonigarcia.wdm.config.DriverManagerType;

import org.openqa.selenium.JavascriptExecutor;
import java.util.*;

import javax.swing.text.StyledEditorKit.BoldAction;

public class CreateBugTest {
  static JavascriptExecutor js;

	private static final String BASE_URL = "http://192.168.56.101/";
	private static final String USERNAME = "admin@example.com";
	private static final String PASSWORD = "Bugzilla1";
	
	private static final DriverManagerType DRIVER_TYPE = DriverManagerType.CHROME;

	private static WebDriver driver;
	private static HomePage homePage;
	private static LoginPage loginPage;
	private static CreateBugPage createBugPage;
	private static ShowBugPage showBugPage;
  private static SearchPage searchPage;
  private static BugListPage bugListPage;
  private static BugListMassChangePage bugListMassChangePage;
  private static ProcessBugPage processBugPage;



  private String bugStatusResolved = "RESOLVED";
  private String resolutionStatusFixed = "FIXED";

	@BeforeAll
	public static void setUpBeforeAll() {
		WebDriverManager.getInstance(DRIVER_TYPE).setup(); 	
		driver = new ChromeDriver();

		homePage = HomePage.navigateTo(driver, BASE_URL);
		loginPage = homePage.gotoLoginPage();
		homePage = loginPage.login(USERNAME, PASSWORD);
	}

	@AfterAll
	public static void tearDownAfterAll() {
		homePage = homePage.logout();

		driver.close();
		driver.quit();
	}
	
	@BeforeEach
	public void setUp() {
		homePage = HomePage.navigateTo(driver, BASE_URL);
	}
  
  @Test
  public void createBugPageObjectTest() {
    // Test name: CreateBugTest
    /*
     * Creates a report and then sets it as resolved upon cleanup
     */
    String summaryText = "TestCreateBug";
    String descriptionText = "A simple test for creating a bugreport";

    createBugPage = homePage.gotoCreateBugPage();
    createBugPage.setSummary(summaryText);
    createBugPage.setDescription(descriptionText);
    showBugPage = createBugPage.submit();

    assert(showBugPage.getNumberOfBugCreationElements() > 0);
    assertEquals(showBugPage.getFirstComment(), descriptionText);
    assertEquals(showBugPage.getSummary(), summaryText);

    // Start clean up
    showBugPage.setBugStatus(bugStatusResolved);
    showBugPage.setResolution(resolutionStatusFixed);
    showBugPage.submit();
  }

  @Test
  public void searchPageObjectTest() {
    // Test name: SearchTest
    /*
     * Creates two reports with and searches for open issues with that name. 
     * Upon cleanup it sets all issues found as resolved.
     */
    String summaryText = "searchforbugreport";

    createBugPage = homePage.gotoCreateBugPage();
    createBugPage.setSummary(summaryText);
    createBugPage.submit();
    createBugPage = homePage.gotoCreateBugPage();
    createBugPage.setSummary(summaryText);
    showBugPage = createBugPage.submit();

    searchPage = homePage.gotoSeachPage();
    searchPage.setBugStatus("Open");
    searchPage.setProduct("TestProduct");
    searchPage.setSearch("searchforbugreport");
    bugListPage = searchPage.submit();

    assertEquals(bugListPage.getResultCount(), "2 bugs found.");

    // Clean up created bugs
    bugListMassChangePage = bugListPage.gotoMassChange();
    bugListMassChangePage.setCheckAll();
    bugListMassChangePage.setBugStatus("RESOLVED");
    bugListMassChangePage.setResolution("FIXED");
    bugListMassChangePage.submit();
  }


  @Test
  public void changeStatusPageObjectTest() {
    // Test name: ChangeStatusTest
    /*
     * Creates a report, then copies it and resolvs the copy. 
     * Upon cleanup also resolves the original issue
     */
    createBugPage = homePage.gotoCreateBugPage();
    createBugPage.setSummary("ChangeStatustest");
    showBugPage = createBugPage.submit();

    createBugPage = showBugPage.cloneBug();
    showBugPage = createBugPage.submit();
    showBugPage.setBugStatus("RESOLVED");
    showBugPage.setResolution("FIXED");
    showBugPage.setComment("Fixed this bug ");
    processBugPage = showBugPage.submit();

    showBugPage = processBugPage.gotoFirstBugInList();
    assertEquals(showBugPage.getStaticBugStatus(), "RESOLVED FIXED (edit)");
    assertEquals(showBugPage.getSecondComment(), "Fixed this bug");

    // clean up
    showBugPage = showBugPage.gotoOriginalBug();
    showBugPage.setBugStatus("RESOLVED");
    showBugPage.setResolution("FIXED");
    showBugPage.submit();
  }
}
