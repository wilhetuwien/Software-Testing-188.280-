<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="at.tuwien.swtesting.RingBufferModelTest" time="0.238" tests="2" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/william/Skrivbord/software testing/Exercise03/01-RingBufferModelBasedTest/target/test-classes:/home/william/Skrivbord/software testing/Exercise03/01-RingBufferModelBasedTest/target/classes:/home/william/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/home/william/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/home/william/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/william/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/home/william/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/william/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/home/william/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/william/.m2/repository/net/bytebuddy/byte-buddy/1.12.21/byte-buddy-1.12.21.jar:/home/william/.m2/repository/nz/ac/waikato/modeljunit/modeljunit/2.5/modeljunit-2.5.jar:/home/william/.m2/repository/asm/asm/3.1/asm-3.1.jar:/home/william/.m2/repository/net/sf/jung/jung-algorithms/2.0.1/jung-algorithms-2.0.1.jar:/home/william/.m2/repository/net/sourceforge/collections/collections-generic/4.01/collections-generic-4.01.jar:/home/william/.m2/repository/colt/colt/1.2.0/colt-1.2.0.jar:/home/william/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar:/home/william/.m2/repository/net/sf/jung/jung-api/2.0.1/jung-api-2.0.1.jar:/home/william/.m2/repository/net/sf/jung/jung-graph-impl/2.0.1/jung-graph-impl-2.0.1.jar:/home/william/.m2/repository/net/sf/jung/jung-io/2.0.1/jung-io-2.0.1.jar:/home/william/.m2/repository/org/codehaus/woodstox/wstx-asl/3.2.6/wstx-asl-3.2.6.jar:/home/william/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/home/william/.m2/repository/net/sf/jung/jung-jai/2.0.1/jung-jai-2.0.1.jar:/home/william/.m2/repository/net/sf/jung/jung-visualization/2.0.1/jung-visualization-2.0.1.jar:/home/william/.m2/repository/junit/junit/4.4/junit-4.4.jar:/home/william/.m2/repository/org/uispec4j/uispec4j/2.4/uispec4j-2.4-jdk16.jar:"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="Unknown"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="SE"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-17-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/william/Skrivbord/software testing/Exercise03/01-RingBufferModelBasedTest/target/surefire/surefirebooter-20230619145639907_3.jar /home/william/Skrivbord/software testing/Exercise03/01-RingBufferModelBasedTest/target/surefire 2023-06-19T14-56-39_779-jvmRun1 surefire-20230619145639907_1tmp surefire_0-20230619145639907_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/william/Skrivbord/software testing/Exercise03/01-RingBufferModelBasedTest/target/test-classes:/home/william/Skrivbord/software testing/Exercise03/01-RingBufferModelBasedTest/target/classes:/home/william/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/home/william/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/home/william/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/william/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/home/william/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/william/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/home/william/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/william/.m2/repository/net/bytebuddy/byte-buddy/1.12.21/byte-buddy-1.12.21.jar:/home/william/.m2/repository/nz/ac/waikato/modeljunit/modeljunit/2.5/modeljunit-2.5.jar:/home/william/.m2/repository/asm/asm/3.1/asm-3.1.jar:/home/william/.m2/repository/net/sf/jung/jung-algorithms/2.0.1/jung-algorithms-2.0.1.jar:/home/william/.m2/repository/net/sourceforge/collections/collections-generic/4.01/collections-generic-4.01.jar:/home/william/.m2/repository/colt/colt/1.2.0/colt-1.2.0.jar:/home/william/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar:/home/william/.m2/repository/net/sf/jung/jung-api/2.0.1/jung-api-2.0.1.jar:/home/william/.m2/repository/net/sf/jung/jung-graph-impl/2.0.1/jung-graph-impl-2.0.1.jar:/home/william/.m2/repository/net/sf/jung/jung-io/2.0.1/jung-io-2.0.1.jar:/home/william/.m2/repository/org/codehaus/woodstox/wstx-asl/3.2.6/wstx-asl-3.2.6.jar:/home/william/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/home/william/.m2/repository/net/sf/jung/jung-jai/2.0.1/jung-jai-2.0.1.jar:/home/william/.m2/repository/net/sf/jung/jung-visualization/2.0.1/jung-visualization-2.0.1.jar:/home/william/.m2/repository/junit/junit/4.4/junit-4.4.jar:/home/william/.m2/repository/org/uispec4j/uispec4j/2.4/uispec4j-2.4-jdk16.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/william"/>
    <property name="user.language" value="sv"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.home" value="/usr/lib/jvm/java-17-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/william/Skrivbord/software testing/Exercise03/01-RingBufferModelBasedTest"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="/home/william/Skrivbord/software testing/Exercise03/01-RingBufferModelBasedTest/target/surefire/surefirebooter-20230619145639907_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.6+10-Ubuntu-0ubuntu122.04"/>
    <property name="user.name" value="william"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.2.6-76060206-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/william/.m2/repository"/>
    <property name="java.vendor.url.bug" value="Unknown"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="17.0.6"/>
    <property name="user.dir" value="/home/william/Skrivbord/software testing/Exercise03/01-RingBufferModelBasedTest"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="java.vm.version" value="17.0.6+10-Ubuntu-0ubuntu122.04"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="testModelWithAdapter" classname="at.tuwien.swtesting.RingBufferModelTest" time="0.171">
    <system-out><![CDATA[done (EMPTY, size, EMPTY)
done (EMPTY, isFull, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, size, FILLED)
done (FILLED, enqueue, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, dequeue, FILLED)
done (FILLED, isEmpty, FILLED)
done (FILLED, capacity, FILLED)
done (FILLED, isFull, FILLED)
done (FILLED, isEmpty, FILLED)
done (FILLED, dequeue, EMPTY)
done (EMPTY, capacity, EMPTY)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, isEmpty, EMPTY)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done Random reset(true)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, capacity, EMPTY)
done (EMPTY, isEmpty, EMPTY)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, capacity, EMPTY)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done Random reset(true)
done (EMPTY, enqueue, FILLED)
done (FILLED, enqueue, FILLED)
done (FILLED, size, FILLED)
done Random reset(true)
done (EMPTY, capacity, EMPTY)
done (EMPTY, size, EMPTY)
done (EMPTY, isFull, EMPTY)
done (EMPTY, enqueue, FILLED)
done Random reset(true)
done (EMPTY, isEmpty, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, isFull, FILLED)
done (FILLED, dequeue, EMPTY)
done (EMPTY, isEmpty, EMPTY)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, capacity, EMPTY)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done (EMPTY, capacity, EMPTY)
done (EMPTY, isEmpty, EMPTY)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, size, FILLED)
done (FILLED, isEmpty, FILLED)
done (FILLED, isFull, FILLED)
done (FILLED, dequeue, EMPTY)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done Random reset(true)
done (EMPTY, isFull, EMPTY)
done (EMPTY, isEmpty, EMPTY)
done (EMPTY, size, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, enqueue, FILLED)
done (FILLED, enqueue, FULL)
done (FULL, capacity, FULL)
done (FULL, size, FULL)
done Random reset(true)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done (EMPTY, capacity, EMPTY)
done (EMPTY, capacity, EMPTY)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, isEmpty, FILLED)
done (FILLED, size, FILLED)
done (FILLED, dequeue, EMPTY)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, size, FILLED)
done (FILLED, size, FILLED)
done (FILLED, capacity, FILLED)
done (FILLED, enqueue, FILLED)
done (FILLED, enqueue, FULL)
done (FULL, peek, FULL)
done (FULL, isFull, FULL)
done (FULL, dequeue, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, isEmpty, FILLED)
done (FILLED, size, FILLED)
done (FILLED, isFull, FILLED)
done (FILLED, isFull, FILLED)
done Random reset(true)
done (EMPTY, enqueue, FILLED)
done (FILLED, dequeue, EMPTY)
done (EMPTY, capacity, EMPTY)
done (EMPTY, capacity, EMPTY)
done (EMPTY, capacity, EMPTY)
done (EMPTY, isFull, EMPTY)
done (EMPTY, size, EMPTY)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, size, EMPTY)
done (EMPTY, isEmpty, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, isEmpty, FILLED)
done Random reset(true)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done (EMPTY, enqueue, FILLED)
state coverage: 3/3
transition coverage: 21/21
]]></system-out>
  </testcase>
  <testcase name="testModelOnly" classname="at.tuwien.swtesting.RingBufferModelTest" time="0.02">
    <system-out><![CDATA[done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, dequeue, EMPTY)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, enqueue, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, dequeue, FILLED)
done (FILLED, enqueue, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, dequeue, FILLED)
done (FILLED, dequeue, EMPTY)
done Random reset(true)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done Random reset(true)
done (EMPTY, enqueue, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, peek, FILLED)
done Random reset(true)
done (EMPTY, dequeueFromEmptyBuffer, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, peek, FILLED)
done Random reset(true)
done (EMPTY, enqueue, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, peek, FILLED)
done Random reset(true)
done (EMPTY, enqueue, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, dequeue, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, dequeue, EMPTY)
done (EMPTY, peekEmptyBuffer, EMPTY)
done (EMPTY, enqueue, FILLED)
done (FILLED, dequeue, EMPTY)
done (EMPTY, enqueue, FILLED)
done Random reset(true)
done (EMPTY, enqueue, FILLED)
done (FILLED, enqueue, FILLED)
done (FILLED, peek, FILLED)
done (FILLED, enqueue, FULL)
state coverage: 3/3
transition coverage: 8/8
]]></system-out>
  </testcase>
</testsuite>